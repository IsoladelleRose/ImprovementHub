server.port=${PORT:8080}
spring.application.name=improvement-hub-backend

# PostgreSQL Database configuration (Railway)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/improvement_hub}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration - Production optimized for Railway
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# SSL Configuration for Railway
spring.datasource.hikari.connection-init-sql=SELECT 1
spring.datasource.hikari.connection-test-query=SELECT 1

# Database connection optimizations for Railway
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false

# CORS configuration for Angular frontend
management.endpoints.web.cors.allowed-origins=http://localhost:4200
management.endpoints.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
management.endpoints.web.cors.allowed-headers=*

# Actuator endpoints for Railway health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# Logging configuration for production
logging.level.com.innostore.improvementhub=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN